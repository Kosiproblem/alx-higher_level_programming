>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 1)
[[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]
>>> matrix_divided([[1, '2'], [3, 4]], 1)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([[1, 2], [1]], 3)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size
>>> matrix_divided([[1, 2], [3, 4]], 'a')
Traceback (most recent call last):
    ...
TypeError: div must be a number
>>> matrix_divided([[1, 2], [3, 4]], 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero
>>> matrix_divided([[1]])
Traceback (most recent call last):
    ...
TypeError: matrix_divided() missing 1 required positional argument: 'div'
>>> try:
...     matrix_divided()
... except Exception as e:
...     print(e)
matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
>>> from math import inf, nan
>>> matrix_divided([[1, 2], [3, 4]], inf)
[[0.0, 0.0], [0.0, 0.0]]
>>> matrix_divided([[inf, 2], [3, 4]], 1)
[[inf, 2.0], [3.0, 4.0]]
>>> matrix_divided([[nan, 2], [3, 4]], 1)
[[nan, 2.0], [3.0, 4.0]]
